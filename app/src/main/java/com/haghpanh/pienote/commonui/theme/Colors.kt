package com.haghpanh.pienote.commonui.theme

import androidx.compose.material3.ColorScheme
import androidx.compose.runtime.getValue
import androidx.compose.runtime.setValue
import androidx.compose.runtime.staticCompositionLocalOf
import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF006492)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF5BBFFF)
val onPrimaryContainerLight = Color(0xFF002D44)
val secondaryLight = Color(0xFF56389E)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFF7B5EC6)
val onSecondaryContainerLight = Color(0xFFFFFFFF)
val tertiaryLight = Color(0xFF00555A)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF007D84)
val onTertiaryContainerLight = Color(0xFFFFFFFF)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFEFEFF)
val onBackgroundLight = Color(0xFF171C20)
val surfaceLight = Color(0xFFF6FAFF)
val onSurfaceLight = Color(0xFF171C20)
val surfaceVariantLight = Color(0xFFDAE4EE)
val onSurfaceVariantLight = Color(0xFF3E4850)
val outlineLight = Color(0xFF6E7881)
val outlineVariantLight = Color(0xFFBEC8D2)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2C3136)
val inverseOnSurfaceLight = Color(0xFFEDF1F7)
val inversePrimaryLight = Color(0xFF8BCEFF)
val surfaceDimLight = Color(0xFFD6DAE0)
val surfaceBrightLight = Color(0xFFF6FAFF)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF0F4FA)
val surfaceContainerLight = Color(0xFFEAEEF4)
val surfaceContainerHighLight = Color(0xFFE4E8EE)
val surfaceContainerHighestLight = Color(0xFFDFE3E9)

val primaryLightMediumContrast = Color(0xFF004769)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF007CB2)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF4C2D94)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF7B5EC6)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF004B4F)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF007D84)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFF6FAFF)
val onBackgroundLightMediumContrast = Color(0xFF171C20)
val surfaceLightMediumContrast = Color(0xFFF6FAFF)
val onSurfaceLightMediumContrast = Color(0xFF171C20)
val surfaceVariantLightMediumContrast = Color(0xFFDAE4EE)
val onSurfaceVariantLightMediumContrast = Color(0xFF3A444C)
val outlineLightMediumContrast = Color(0xFF566069)
val outlineVariantLightMediumContrast = Color(0xFF727C85)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF2C3136)
val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF1F7)
val inversePrimaryLightMediumContrast = Color(0xFF8BCEFF)
val surfaceDimLightMediumContrast = Color(0xFFD6DAE0)
val surfaceBrightLightMediumContrast = Color(0xFFF6FAFF)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF0F4FA)
val surfaceContainerLightMediumContrast = Color(0xFFEAEEF4)
val surfaceContainerHighLightMediumContrast = Color(0xFFE4E8EE)
val surfaceContainerHighestLightMediumContrast = Color(0xFFDFE3E9)

val primaryLightHighContrast = Color(0xFF002539)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF004769)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF2A006E)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF4C2D94)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF00272A)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF004B4F)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFF6FAFF)
val onBackgroundLightHighContrast = Color(0xFF171C20)
val surfaceLightHighContrast = Color(0xFFF6FAFF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFDAE4EE)
val onSurfaceVariantLightHighContrast = Color(0xFF1C252D)
val outlineLightHighContrast = Color(0xFF3A444C)
val outlineVariantLightHighContrast = Color(0xFF3A444C)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2C3136)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFDCEEFF)
val surfaceDimLightHighContrast = Color(0xFFD6DAE0)
val surfaceBrightLightHighContrast = Color(0xFFF6FAFF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF0F4FA)
val surfaceContainerLightHighContrast = Color(0xFFEAEEF4)
val surfaceContainerHighLightHighContrast = Color(0xFFE4E8EE)
val surfaceContainerHighestLightHighContrast = Color(0xFFDFE3E9)

val primaryDark = Color(0xFF9BD4FF)
val onPrimaryDark = Color(0xFF00344E)
val primaryContainerDark = Color(0xFF2DAEF3)
val onPrimaryContainerDark = Color(0xFF001B2C)
val secondaryDark = Color(0xFFCFBCFF)
val onSecondaryDark = Color(0xFF391581)
val secondaryContainerDark = Color(0xFF7255BC)
val onSecondaryContainerDark = Color(0xFFFFFFFF)
val tertiaryDark = Color(0xFF78D5DC)
val onTertiaryDark = Color(0xFF00363A)
val tertiaryContainerDark = Color(0xFF007278)
val onTertiaryContainerDark = Color(0xFFFFFFFF)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF000000)
val onBackgroundDark = Color(0xFFDFE3E9)
val surfaceDark = Color(0xFF0F1418)
val onSurfaceDark = Color(0xFFDFE3E9)
val surfaceVariantDark = Color(0xFF3E4850)
val onSurfaceVariantDark = Color(0xFFBEC8D2)
val outlineDark = Color(0xFF88929B)
val outlineVariantDark = Color(0xFF3E4850)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFDFE3E9)
val inverseOnSurfaceDark = Color(0xFF2C3136)
val inversePrimaryDark = Color(0xFF006492)
val surfaceDimDark = Color(0xFF0F1418)
val surfaceBrightDark = Color(0xFF353A3E)
val surfaceContainerLowestDark = Color(0xFF0A0F13)
val surfaceContainerLowDark = Color(0xFF171C20)
val surfaceContainerDark = Color(0xFF1B2024)
val surfaceContainerHighDark = Color(0xFF262B2F)
val surfaceContainerHighestDark = Color(0xFF30353A)

val primaryDarkMediumContrast = Color(0xFF9BD4FF)
val onPrimaryDarkMediumContrast = Color(0xFF001B2B)
val primaryContainerDarkMediumContrast = Color(0xFF2DAEF3)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFD3C1FF)
val onSecondaryDarkMediumContrast = Color(0xFF1C004F)
val secondaryContainerDarkMediumContrast = Color(0xFF9C7FE9)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFF7DD9E0)
val onTertiaryDarkMediumContrast = Color(0xFF001A1C)
val tertiaryContainerDarkMediumContrast = Color(0xFF3D9EA5)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF0F1418)
val onBackgroundDarkMediumContrast = Color(0xFFDFE3E9)
val surfaceDarkMediumContrast = Color(0xFF0F1418)
val onSurfaceDarkMediumContrast = Color(0xFFF9FBFF)
val surfaceVariantDarkMediumContrast = Color(0xFF3E4850)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC2CCD6)
val outlineDarkMediumContrast = Color(0xFF9AA4AE)
val outlineVariantDarkMediumContrast = Color(0xFF7A848E)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFDFE3E9)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF262B2F)
val inversePrimaryDarkMediumContrast = Color(0xFF004D71)
val surfaceDimDarkMediumContrast = Color(0xFF0F1418)
val surfaceBrightDarkMediumContrast = Color(0xFF353A3E)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0F13)
val surfaceContainerLowDarkMediumContrast = Color(0xFF171C20)
val surfaceContainerDarkMediumContrast = Color(0xFF1B2024)
val surfaceContainerHighDarkMediumContrast = Color(0xFF262B2F)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF30353A)

val primaryDarkHighContrast = Color(0xFFF9FBFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFF95D1FF)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFFF9FF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFD3C1FF)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFEDFEFF)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFF7DD9E0)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF0F1418)
val onBackgroundDarkHighContrast = Color(0xFFDFE3E9)
val surfaceDarkHighContrast = Color(0xFF0F1418)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF3E4850)
val onSurfaceVariantDarkHighContrast = Color(0xFFF9FBFF)
val outlineDarkHighContrast = Color(0xFFC2CCD6)
val outlineVariantDarkHighContrast = Color(0xFFC2CCD6)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFDFE3E9)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF002D44)
val surfaceDimDarkHighContrast = Color(0xFF0F1418)
val surfaceBrightDarkHighContrast = Color(0xFF353A3E)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0A0F13)
val surfaceContainerLowDarkHighContrast = Color(0xFF171C20)
val surfaceContainerDarkHighContrast = Color(0xFF1B2024)
val surfaceContainerHighDarkHighContrast = Color(0xFF262B2F)
val surfaceContainerHighestDarkHighContrast = Color(0xFF30353A)

fun darkColorScheme() = ColorScheme(
    primary = primaryDark,
    onPrimary = onPrimaryDark,
    primaryContainer = primaryContainerDark,
    onPrimaryContainer = onPrimaryContainerDark,
    inversePrimary = inversePrimaryDark,
    secondary = secondaryDark,
    onSecondary = onSecondaryDark,
    secondaryContainer = secondaryContainerDark,
    onSecondaryContainer = onSecondaryContainerDark,
    tertiary = tertiaryDark,
    onTertiary = onTertiaryDark,
    tertiaryContainer = tertiaryContainerDark,
    onTertiaryContainer = onTertiaryContainerDark,
    background = backgroundDark,
    onBackground = onBackgroundDark,
    surface = surfaceDark,
    onSurface = onSurfaceDark,
    surfaceVariant = surfaceVariantDark,
    onSurfaceVariant = onSurfaceVariantDark,
    surfaceTint = Color.Unspecified,
    inverseSurface = inverseSurfaceDark,
    inverseOnSurface = inverseOnSurfaceDark,
    error = errorDark,
    onError = onErrorDark,
    errorContainer = errorContainerDark,
    onErrorContainer = onErrorContainerDark,
    outline = outlineDark,
    outlineVariant = outlineVariantDark,
    scrim = scrimDark,
    surfaceBright = surfaceBrightDark,
    surfaceDim = surfaceDimDark,
    surfaceContainer = surfaceContainerDark,
    surfaceContainerHigh = surfaceContainerHighDark,
    surfaceContainerHighest = surfaceContainerHighestDark,
    surfaceContainerLow = surfaceContainerLowDark,
    surfaceContainerLowest = surfaceContainerLowestDark
)

fun lightColorScheme() = ColorScheme(
    primary = primaryLight,
    onPrimary = onPrimaryLight,
    primaryContainer = primaryContainerLight,
    onPrimaryContainer = onPrimaryContainerLight,
    inversePrimary = inversePrimaryLight,
    secondary = secondaryLight,
    onSecondary = onSecondaryLight,
    secondaryContainer = secondaryContainerLight,
    onSecondaryContainer = onSecondaryContainerLight,
    tertiary = tertiaryLight,
    onTertiary = onTertiaryLight,
    tertiaryContainer = tertiaryContainerLight,
    onTertiaryContainer = onTertiaryContainerLight,
    background = backgroundLight,
    onBackground = onBackgroundLight,
    surface = surfaceLight,
    onSurface = onSurfaceLight,
    surfaceVariant = surfaceVariantLight,
    onSurfaceVariant = onSurfaceVariantLight,
    surfaceTint = Color.Unspecified,
    inverseSurface = inverseSurfaceLight,
    inverseOnSurface = inverseOnSurfaceLight,
    error = errorLight,
    onError = onErrorLight,
    errorContainer = errorContainerLight,
    onErrorContainer = onErrorContainerLight,
    outline = outlineLight,
    outlineVariant = outlineVariantLight,
    scrim = scrimLight,
    surfaceBright = surfaceBrightLight,
    surfaceDim = surfaceDimLight,
    surfaceContainer = surfaceContainerLight,
    surfaceContainerHigh = surfaceContainerHighLight,
    surfaceContainerHighest = surfaceContainerHighestLight,
    surfaceContainerLow = surfaceContainerLowLight,
    surfaceContainerLowest = surfaceContainerLowestLight
)

val LocalDarkColors = staticCompositionLocalOf { darkColorScheme() }
val LocalLightColors = staticCompositionLocalOf { lightColorScheme() }
